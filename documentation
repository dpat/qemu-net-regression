Automated QEMU Network Regression Testing

This set of QEMU tests uses bash scripts to set up test environments, and both bash and python scripts to run a series of network tests against QEMU and format the output data.

In total there are 2 network backends, 2 network paths, and 4 unique netperf tests integrated in this QEMU network test suite

The backends used are listed below

- Virtio-Net
- Vhost-Net

Backends to be added: macvtap, virtio-multiqueue, & vhost-multiqueue (pci-passthrough and sr-iov will not be implemented, but documentation for manual setup will be added)


Each test case runs a suite of netperf tests across two paths:

- Host to VM on the same bare-metal system
- VM to VM on the same bare-metal system 

Network Tests

Netperf is the primary tool used in these tests, the netperf tests used are listed below along with their purpose:

- TCP_RR      (latency)
- UDP_RR      (latency / aggregate measurements)
- TCP_STREAM  (throughput / aggregate measurements)
- UDP_STREAM  (throughput)

System Environment

The system environment used for this test consists of one bare-metal host and 1-2 virtualized QEMU guests. The guest machines are initialized in the initialize.sh script.

For the virtio and vhost based test cases (this includes multiqueue) it should be noted that the bridge type br0 is used in all instances (as opposed to virbr0)

During macvtap testing, a macvlan is set up in order to facilitate communication between host and guest.

(Due to the nature of the pci-passthrough and sr-iov backends, these test cases will require a special test environment using existing bare-metal hosts with pre-configured settings)

format_data.py

format_data.py is the script used to parse the data output by netperf, it can be edited to provide more or less data depending on preference.

Currently data is output in seperate files for each test type, backend, and path.

Pre-Setup

Before running these tests it is necessary to have netperf installed and the test scripts installed

Running the QEMU Tests

To run the QEMU network tests, the script below should be called
./qemu_net_test

The script will ask for some basic input, or for an input file which can be edited with test specifications

This script can be called with flags to specify a number of different test configurations, use the call qemu_net_test with the -h flag to view these options

Output

Data can be found in the results directory corresponding to the two versions of qemu used for that test.
The output data consists of graphs generated by gnuplot and .dat files with test values

Troubleshooting

While the test bridge is active, access to any outside networks may be compromised
Currently macvtap testing is disabled due to issues with setting up a working subnetwork of macvtap guests (as of 1/12/17).

TL;DR

1. install netperf and test scripts
2. chmod +x qemu_net_test
3. ./qemu_net_test (optionally use -h to run other test types)
4. input requirements (QEMU versions etc)
5. review data in the "results" directory and examine for performance regression


